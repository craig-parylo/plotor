[{"path":"https://craig-parylo.github.io/plotor/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 plotor authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"installing-plotor","dir":"Articles","previous_headings":"","what":"Installing plotor","title":"Using plotor","text":"plotor can installed via GitHub using devtools package: can also install latest released version Cran :","code":"# install.packages(\"devtools\") devtools::install_github(\"craig-parylo/plotor\") install.packages(\"plotor\")"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"example-1---using-the-titanic-survivors-data-set","dir":"Articles","previous_headings":"","what":"Example 1 - using the Titanic survivors data set","title":"Using plotor","text":"Let’s start exploring likelihood surviving Titanic disaster based passenger economic status (class), sex, age group. Get prepare data datasets package. now tibble data containing four columns: Survived - outcome variable describing whether passenger survived Yes died , Class - passenger class, either 1st, 2nd, 3rd Crew, Sex - gender passenger, either Male Female, Age - whether passenger Adult Child. next conduct logistic regression survival (binary factor: ‘yes’ ‘’) characteristics passenger class, sex age group. use Generalised Linear Model function (glm) stats package, specifying: family ‘binomial’, formula survival function Class, Sex Age. Finally, can plot Odds Ratio survival using plot_or function.  plot makes clear : Children 2.89 times likely survive Adults, Passengers 2nd, 3rd class well Crew less likely survive 1st class, Women 11.25 times likely survive men.","code":"df <- datasets::Titanic |>    as_tibble() |>    # convert counts to observations   filter(n > 0) |>   uncount(weights = n) |>   # convert categorical variables to factors.   # we specify an order for levels in Class and Survival, otherwise ordering   # in descending order of frequency   mutate(     Class = Class |>       fct(levels = c('1st', '2nd', '3rd', 'Crew')),     Sex = Sex |>       fct_infreq(),     Age = Age |>       fct_infreq(),     Survived = Survived |>       fct(levels = c('No', 'Yes'))   )  # preview the data df |> glimpse() #> Rows: 2,201 #> Columns: 4 #> $ Class    <fct> 3rd, 3rd, 3rd, 3rd, 3rd, 3rd, 3rd, 3rd, 3rd, 3rd, 3rd, 3rd, 3… #> $ Sex      <fct> Male, Male, Male, Male, Male, Male, Male, Male, Male, Male, M… #> $ Age      <fct> Child, Child, Child, Child, Child, Child, Child, Child, Child… #> $ Survived <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, N… # conduct a logistic regression of survival against the other variables lr <- glm(   data = df,   family = 'binomial',   formula = Survived ~ Class + Sex + Age )  # preview the model as a tidy table lr |>    tidy() |>    glimpse() #> Rows: 6 #> Columns: 5 #> $ term      <chr> \"(Intercept)\", \"Class2nd\", \"Class3rd\", \"ClassCrew\", \"SexFema… #> $ estimate  <dbl> -0.3762229, -1.0180950, -1.7777622, -0.8576762, 2.4200603, 1… #> $ std.error <dbl> 0.1361769, 0.1959969, 0.1715657, 0.1573387, 0.1404093, 0.244… #> $ statistic <dbl> -2.762751, -5.194443, -10.361993, -5.451147, 17.235750, 4.35… #> $ p.value   <dbl> 5.731642e-03, 2.053331e-07, 3.691891e-25, 5.004592e-08, 1.43… # using plot_or plot_or(glm_model_results = lr)"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"note-on-plot-features","dir":"Articles","previous_headings":"Example 1 - using the Titanic survivors data set","what":"Note on plot features","title":"Using plotor","text":"primary components Odds-Ratio plot dots, whiskers line effect. dot represents point estimate Odds-Ratio, indicates much likely event comparator event. width whiskers represents Confidence Interval, range values point estimate (dot) likely fall within study repeated, often probability 95%. line effect set value 1. Events whose confidence intervals touch cross line considered show difference likelihood comparator event. size dots proportional number observations. , size Adult square much larger Child square, 20 times adults ship children. feature can help contextualise findings plots.","code":""},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"change-base-font-size","dir":"Articles","previous_headings":"Example 1 - using the Titanic survivors data set","what":"Change base font size","title":"Using plotor","text":"increase size font can extend returned plot using theme function ggplot2. set base size fonts plot size 16.","code":"plot_or(glm_model_results = lr) +    theme(text = element_text(size = 16))"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"specify-the-breaks","dir":"Articles","previous_headings":"Example 1 - using the Titanic survivors data set","what":"Specify the breaks","title":"Using plotor","text":"Odds Ratio () plots produced plotor displayed using log10 x-axis. default ten breaks shown, however, can altered extending scale_x_log10 function ggplot2. provide manual list breaks use:","code":"plot_or(glm_model_results = lr) +    scale_x_log10(breaks = c(0.1, 0.5, 1, 5, 10))"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"change-the-confidence-level","dir":"Articles","previous_headings":"Example 1 - using the Titanic survivors data set","what":"Change the confidence level","title":"Using plotor","text":"Confidence Intervals calculated using percentage confidence, called Confidence Level, sometimes range 80% 99% 95% commonly-used. default {plotor} 95% version 0.5.3 onward can change specifying conf_level parameter plot_or() call. set Confidence Level 99% Titanic data set:  Notice whiskers grown slightly? wished confident (additional 4% top 95% used previously) Confidence Interval covers values Odds Ratio estimate take repeat experiment multiple times. Thus Confidence Interval increased match expected Confidence Level. example increased length resulting Confidence intervals still cross dotted line affect conclusions 1st class passengers likely survive classes people, Women likely survive Men Children likely survive Adults.","code":"plot_or(glm_model_results = lr, conf_level = 0.99)"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"change-the-dot-and-whisker-colours","dir":"Articles","previous_headings":"Example 1 - using the Titanic survivors data set","what":"Change the dot and whisker colours","title":"Using plotor","text":"three types colours used dots whiskers plot, depending category. Significant refers dots results indicate significant finding 95% confidence intervals touch cross value 1 - line effect. Comparator refers level factor model Odds Ratios calculated. significant refers dots results indicate significant finding confidence intervals touch cross line effect. colours points can changed extending output using scale_colour_manual function ggplot2 named vector specifying colour values three types colours:","code":"plot_or(glm_model_results = lr) +   scale_colour_manual(values = c(     'Significant' = '#44bd32',     'Comparator' = '#8c7ae6',     'Not significant' = '#e84118')   )"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"change-the-title-subtitle-and-add-a-caption","dir":"Articles","previous_headings":"Example 1 - using the Titanic survivors data set","what":"Change the title, subtitle and add a caption","title":"Using plotor","text":"plotor uses dependent variable title plot default subtitle indicating Odds Ratio plot 95% confidence interval. plot can customised title, subtitle add caption extending labs function ggplot2.","code":"plot_or(glm_model_results = lr) +   labs(     title = 'Passenger survival from the Titanic disaster',     subtitle = 'Odds Ratio of survival by Class, Age and Gender',     caption = 'Data source: Dawson, Robert J. MacG. (1995), The ‘Unusual Episode’ Data Revisited. Journal of Statistics Education, 3. doi:10.1080/10691898.1995.11910499'   )"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"example-2---using-the-smoking-alcohol-and-oesophageal-cancer-data-set","dir":"Articles","previous_headings":"","what":"Example 2 - using the Smoking, Alcohol and Oesophageal Cancer data set","title":"Using plotor","text":"data set comes case-control study oesophageal cancer Ile-et-Vilaine, France. addition outcome variable, Group, identifying case (developed cancer) control (disease free), contains three explanatory variables: agegp - age group participant, alcgp - alcohol consumption participant, measured grams per day, tobgp - tobacco consumption participant, measured grams per day. look likelihood participant develop oesophageal cancer can perform logistic regression variables. Next carry logistic regression plot results.  can see strong link age likelihood cancer. Compared 25-34 years group statistically significant increased likelihood case cohort 45-54 years group (43 times likely), 55-64 years group (76 times likely), 65-74 years group (133 times likely), 75+ years group (124 times likely). also strong link alcohol consumption likelihood cancer. Compared consumed least alcohol, defined 0 39 g/day, consumed alcohol risk developing cancer greatest risk consumed 119 g/day, putting 36 times likely develop cancer. Tobacco use nuanced picture. detectable difference likelihood developing cancer first three groups (0-9g/day, 10-19g/day 20-29g/day) - seen confidence intervals crossing line effect. However, statistically significant increased risk developing cancer consumed tobacco, 30+g/day, putting 5 times risk.","code":"df <- datasets::esoph |>    # convert aggregated data to tidy observational data   tidyr::pivot_longer(     cols = c(ncases, ncontrols),     names_to = 'Group',     values_to = 'people'   ) |>    uncount(weights = people) |>    # prepare the variables   mutate(     # convert the intervention group to a factor     Group = Group |>        case_match('ncases' ~ 'Case', 'ncontrols' ~ 'Control') |>        fct(levels = c('Control', 'Case')),     # remove the ordering from these factors so the glm model doesn't treat     # them as numeric     agegp = agegp |> factor(ordered = F),     alcgp = alcgp |> factor(ordered = F),     tobgp = tobgp |> factor(ordered = F)   )  # preview the data df |> glimpse() #> Rows: 975 #> Columns: 4 #> $ agegp <fct> 25-34, 25-34, 25-34, 25-34, 25-34, 25-34, 25-34, 25-34, 25-34, 2… #> $ alcgp <fct> 0-39g/day, 0-39g/day, 0-39g/day, 0-39g/day, 0-39g/day, 0-39g/day… #> $ tobgp <fct> 0-9g/day, 0-9g/day, 0-9g/day, 0-9g/day, 0-9g/day, 0-9g/day, 0-9g… #> $ Group <fct> Control, Control, Control, Control, Control, Control, Control, C… # conduct the logistic regression lr <- glm(   data = df,   family = 'binomial',   formula = Group ~ agegp + alcgp + tobgp )  # plot the odds ratio plot with customised title plot_or(lr) +   labs(title = 'Likelihood of developing oesophageal cancer')"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"use-variable-labels","dir":"Articles","previous_headings":"Example 2 - using the Smoking, Alcohol and Oesophageal Cancer data set","what":"Use variable labels","title":"Using plotor","text":"Replacing variable names descriptive label makes plots accessible involved analysis. example, Alcohol consumption (g/day) user-friendly label name variable, alcgp. amazing packages designed help label data. example use labelled package label data analysing plotting . Analyse data using logistic regression plot result.  plot_or recognises use labels uses preference variable names wherever available. Using variable labels makes plots easier read accessible, especially useful want include chart reports publications.","code":"# library to apply labels to data library(labelled)  # create a list of variable = labels var_labels <- list(   agegp = 'Age group',   alcgp = 'Alcohol consumption',   tobgp = 'Tobacco consumption',   Group = 'Developing oesophageal cancer' )  # label the variables in our data labelled::var_label(df) <- var_labels  # preview the data with labels appplied  labelled::look_for(df) #>  pos variable label                         col_type missing values    #>  1   agegp    Age group                     fct      0       25-34     #>                                                              35-44     #>                                                              45-54     #>                                                              55-64     #>                                                              65-74     #>                                                              75+       #>  2   alcgp    Alcohol consumption           fct      0       0-39g/day #>                                                              40-79     #>                                                              80-119    #>                                                              120+      #>  3   tobgp    Tobacco consumption           fct      0       0-9g/day  #>                                                              10-19     #>                                                              20-29     #>                                                              30+       #>  4   Group    Developing oesophageal cancer fct      0       Control   #>                                                              Case # conduct the logistic regression lr <- glm(   data = df,   family = 'binomial',   formula = Group ~ agegp + alcgp + tobgp )  # plot the odds ratio plot using variable labels plot_or(lr)"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"control-covariate-order","dir":"Articles","previous_headings":"Example 2 - using the Smoking, Alcohol and Oesophageal Cancer data set","what":"Control covariate order","title":"Using plotor","text":"Sometimes can useful control ordering covariates plots. can done group similar variables together, demographics, arrange covariates pleasing order. example, imagine wish display tobacco consumption Odds Ratios top plot main focus study wish draw attention findings. age group can put bottom plot. version 0.5.2 onwards plotor facilitates need respecting order covariates listed model.  now tobacco first covariate y-axis age group last covariate.","code":"# conduct the logistic regression with tobacco listed first in the 'formula' lr <- glm(   data = df,   family = 'binomial',   formula = Group ~ tobgp + alcgp + agegp )  # plot the odds ratio plot using variable labels plot_or(lr)"},{"path":"https://craig-parylo.github.io/plotor/articles/using_plotor.html","id":"summarise-in-a-table","dir":"Articles","previous_headings":"Example 2 - using the Smoking, Alcohol and Oesophageal Cancer data set","what":"Summarise in a table","title":"Using plotor","text":"Odds Ratio plots often accompanied summary tables academic papers. tables provide details always visible plot, number observations category conversion rate base population outcome interest. version 0.5.3 plotor can produce summary tables using new function table_or() either tibble publication-ready gt table. tibble contains details label containing name label variables, level describing contents categorical variables, rows enumerating number observations relevant category level, outcome enumerating number observations resulted outcome interest, outcome_rate showing conversion rows outcome, class describing data class variable, estimate Odds Ratio point estimate, std.error standard error Odds Ratio, p.value probability producing Odds Ratio estimate chance, conf.low lower confidence interval, conf.high upper confidence interval, significance description whether Odds Ratio statistically significant, reference confidence interval, tibble format means information can re-used custom tables visualisations. Specify output = 'gt' get publication-quality html table made using gt package. Level - name description explanatory variable. N - number observations examined. n - number observations resulting outcome interest. Rate - proportion observations resulting outcome interest (n / N). Class - description data type. - Odds Ratio point estimate - values 1 indicate inverse relationship whereas values 1 indicate positive relationship. Values shown 4 significant figures. SE - Standard Error point estimate. Values shown 4 significant figures. p - p-value estimate based residual Chi-squared statistic. Lower & Upper - range values comprising CI, shown 4 significant figures. Significance - statistical significance indicated CI, Significant CI touch cross value 1. main features table include: number formatting thousands separators counts rounding nearest four significant figures prevent precision clutter, footnotes explaining section providing key column headings, title defaulting outcome variable subtitle providing description table contains, can changed extending {gt} functions. simple plot give sense distributions Odds Ratio estimates.","code":"table_or(lr, output = 'tibble') #> Warning: Some of your categorical predictor variables have levels with #> too few outcomes. #> # A tibble: 14 × 14 #>    label     level  rows outcome outcome_rate class estimate std.error statistic #>    <fct>     <fct> <int>   <int>        <dbl> <chr>    <dbl>     <dbl>     <dbl> #>  1 \"Age gro… 25-34   116       1      0.00862 fact…    NA       NA         NA    #>  2 \"Age gro… 35-44   199       9      0.0452  fact…     7.25     1.10       1.79 #>  3 \"Age gro… 45-54   213      46      0.216   fact…    43.7      1.07       3.54 #>  4 \"Age gro… 55-64   242      76      0.314   fact…    76.3      1.06       4.07 #>  5 \"Age gro… 65-74   161      55      0.342   fact…   134.       1.08       4.55 #>  6 \"Age gro… 75+      44      13      0.295   fact…   125.       1.12       4.30 #>  7 \"Alcohol… 0-39…   415      29      0.0699  fact…    NA       NA         NA    #>  8 \"Alcohol… 40-79   355      75      0.211   fact…     4.20     0.250      5.74 #>  9 \"Alcohol… 80-1…   138      51      0.370   fact…     7.25     0.285      6.96 #> 10 \"Alcohol… 120+     67      45      0.672   fact…    36.7      0.385      9.36 #> 11 \"Tobacco… 0-9g…   525      78      0.149   fact…    NA       NA         NA    #> 12 \"Tobacco… 10-19   236      58      0.246   fact…     1.55     0.228      1.92 #> 13 \"Tobacco… 20-29   132      33      0.25    fact…     1.67     0.273      1.88 #> 14 \"Tobacco… 30+      82      31      0.378   fact…     5.16     0.344      4.77 #> # ℹ 5 more variables: p.value <dbl>, conf.low <dbl>, conf.high <dbl>, #> #   significance <chr>, comparator <dbl> table_or(lr, output = 'gt') |>    gt::tab_options(container.width = 1100) #> Warning: Some of your categorical predictor variables have levels with #> too few outcomes."},{"path":"https://craig-parylo.github.io/plotor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Craig Parylo. Author, maintainer, copyright holder.","code":""},{"path":"https://craig-parylo.github.io/plotor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parylo C (2025). plotor: Produces Odds Ratio Plot Logistic Regression Model. R package version 0.7.0, https://github.com/craig-parylo/plotor.","code":"@Manual{,   title = {plotor: Produces an Odds Ratio Plot from a Logistic Regression Model},   author = {Craig Parylo},   year = {2025},   note = {R package version 0.7.0},   url = {https://github.com/craig-parylo/plotor}, }"},{"path":[]},{"path":"https://craig-parylo.github.io/plotor/index.html","id":"plotor-","dir":"","previous_headings":"","what":"plotor","title":"Produces an Odds Ratio Plot from a Logistic Regression Model","text":"goal plotor generate Odds Ratio plots logistic regression models.","code":""},{"path":"https://craig-parylo.github.io/plotor/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Produces an Odds Ratio Plot from a Logistic Regression Model","text":"can install development version plotor GitHub : can also install latest released version CRAN :","code":"# install.packages(\"devtools\") devtools::install_github(\"craig-parylo/plotor\") install.packages(\"plotor\")"},{"path":"https://craig-parylo.github.io/plotor/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Produces an Odds Ratio Plot from a Logistic Regression Model","text":"example explore likelihood surviving Titanic disaster based passenger economic status (class), sex, age group. addition plotor packages use include dplyr, tidyr forcats general data wrangling, stats package conduct logistic regression followed broom tidy output convert results Odds Ratios confidence intervals, ggplot2 visualise plot. Start getting data datasets package. now tibble data containing four columns: Survived - outcome variable describing whether passenger survived Yes died , Class - passenger class, either 1st, 2nd, 3rd Crew, Sex - gender passenger, either Male Female, Age - whether passenger Adult Child. next conduct logistic regression survival (binary factor: ‘yes’ ‘’) characteristics passenger class, sex age group. use Generalised Linear Model function (glm) stats package, specifying: family ‘binomial’, formula survival function Class, Sex Age. Finally, can plot Odds Ratio survival using plot_or function.  plot makes clear : Children 2.89 times likely survive Adults, Passengers 2nd, 3rd class well Crew less likely survive 1st class, Women 11.25 times likely survive men.","code":"library(plotor)      # generates Odds Ratio plots library(datasets)    # source of example data library(dplyr)       # data wrangling library(tidyr)       # data wrangling - uncounting aggregated data library(forcats)     # data wrangling - handling factor variables library(stats)       # perform logistic regression using glm function library(broom)       # tidying glm model and producing OR and CI library(ggplot2)     # data visualisation df <- datasets::Titanic |>    as_tibble() |>    # convert counts to observations   filter(n > 0) |>   uncount(weights = n) |>   # convert categorical variables to factors.   # we specify an order for levels in Class and Survival, otherwise ordering   # in descending order of frequency   mutate(     Class = Class |>       fct(levels = c('1st', '2nd', '3rd', 'Crew')),     Sex = Sex |>       fct_infreq(),     Age = Age |>       fct_infreq(),     Survived = Survived |>       fct(levels = c('No', 'Yes'))   ) # conduct a logistic regression of survival against the other variables lr <- glm(   data = df,    family = 'binomial',    formula = Survived ~ Class + Sex + Age   ) # using plot_or  plot_or(glm_model_results = lr)"},{"path":"https://craig-parylo.github.io/plotor/index.html","id":"table-outputs","dir":"","previous_headings":"","what":"Table outputs","title":"Produces an Odds Ratio Plot from a Logistic Regression Model","text":"odds ratio plot can effectively visualise direction magnitude relationships, table results offers additional information value odds ratio, p-values confidence intervals. Use table_or() function return tibble details Titanic analysis: can also output details formatted table complete mini plot, ideal inclusion reports publications. , add output = \"gt\" part table_or() function call.","code":"# using table_or table_or(glm_model_results = lr) #> # A tibble: 8 × 14 #>   label level   rows outcome outcome_rate class  estimate std.error statistic #>   <fct> <fct>  <int>   <int>        <dbl> <chr>     <dbl>     <dbl>     <dbl> #> 1 Class 1st      325     203        0.625 factor   NA        NA         NA    #> 2 Class 2nd      285     118        0.414 factor    0.361     0.196     -5.19 #> 3 Class 3rd      706     178        0.252 factor    0.169     0.172    -10.4  #> 4 Class Crew     885     212        0.240 factor    0.424     0.157     -5.45 #> 5 Sex   Male    1731     367        0.212 factor   NA        NA         NA    #> 6 Sex   Female   470     344        0.732 factor   11.2       0.140     17.2  #> 7 Age   Adult   2092     654        0.313 factor   NA        NA         NA    #> 8 Age   Child    109      57        0.523 factor    2.89      0.244      4.35 #> # ℹ 5 more variables: p.value <dbl>, conf.low <dbl>, conf.high <dbl>, #> #   significance <chr>, comparator <dbl>"},{"path":"https://craig-parylo.github.io/plotor/index.html","id":"assumption-checks","dir":"","previous_headings":"","what":"Assumption checks","title":"Produces an Odds Ratio Plot from a Logistic Regression Model","text":"New plotor new suite automated checks. checks verify data used logistic regression analysis upholds required assumptions, providing added layer confidence results. Assumptions logistic regression Predictor variables high levels correlation known multicollinearity. case odds ratio estimates likely unstable, confidence intervals likely much larger, make difficult interpret results. logistic regression, separation occurs predictor variable (combination predictor variables) perfectly predicts outcome variable. Separation results infinite extremely large odds ratios possibly issues non-convergence logistic regression model, making difficult model estimate coefficients.","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/check_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Check OR — check_or","title":"Check OR — check_or","text":"Performs series tests ensure assumptions logistic regression met, optional detailed feedback tests fail.","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/check_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check OR — check_or","text":"","code":"check_or(glm_model_results, confint_fast_estimate = FALSE, details = TRUE)"},{"path":"https://craig-parylo.github.io/plotor/reference/check_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check OR — check_or","text":"glm_model_results Results binomial Generalised Linear Model (GLM), produced stats::glm(). confint_fast_estimate Boolean (default = FALSE) Use faster estimate confidence interval? Note: assumes normally distributed data, may suitable data. details Boolean (default = TRUE) Show detailed feedback failed tests?","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/check_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check OR — check_or","text":"Logical, TRUE assumption tests pass, FALSE one tests fail","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/check_or.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check OR — check_or","text":"","code":"# Load the Titanic dataset df <- datasets::Titanic |>   dplyr::as_tibble() |>   # convert aggregated counts to individual observations   dplyr::filter(n > 0) |>   tidyr::uncount(weights = n) |>   # convert character variables to factors   dplyr::mutate(dplyr::across(dplyr::where(is.character), as.factor))  # Perform logistic regression using `glm` lr <- stats::glm(   data = df,   family = binomial,   formula = Survived ~ Class + Sex + Age )  # Check the model for logistic regression assumption violations check_or(lr) #>  #> ── Assumption checks ─────────────────────────────────────────────────────────── #>  #> ── Summary ── #>  #> ✔ The outcome variable is binary #> ✔ The predictor variables are not highly correlated with each other #> ✔ The outcome is not separated by predictors #> ✔ The sample size is large enough #>  #> Your model was checked for logistic regression assumptions in the following #> areas: #>  #> Binary outcome: #> The outcome variable was checked for containing precisely two levels. #>  #> Multicollinearity: #> The `vif()` function from the car package was used to check for highly #> correlated predictor variables. #>  #> Separation: #> The `detectseparation()` function from the detectseparation package was used to #> check for complete or quasi-complete separation in the data. #>  #> Sample size: #> A rule of thumb was applied, requiring at least 10 events per predictor #> variable and at least 10 events per level of categorical variables to ensure #> sufficient data for reliable estimates. #>  #> ✔ These tests found no issues with your model. #>"},{"path":"https://craig-parylo.github.io/plotor/reference/plot_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot OR — plot_or","title":"Plot OR — plot_or","text":"Produces Odds Ratio plot visualise results logistic regression analysis.","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/plot_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot OR — plot_or","text":"","code":"plot_or(glm_model_results, conf_level = 0.95, confint_fast_estimate = FALSE)"},{"path":"https://craig-parylo.github.io/plotor/reference/plot_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot OR — plot_or","text":"glm_model_results Results binomial Generalised Linear Model (GLM), produced stats::glm(). conf_level Numeric value 0.001 0.999 (default = 0.95) specifying confidence level confidence interval. confint_fast_estimate Boolean (default = FALSE) indicating whether use faster estimate confidence interval. Note: assumes normally distributed data, may suitable data.","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/plot_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot OR — plot_or","text":"function returns object class gg ggplot, can customised extended using various ggplot2 functions.","code":""},{"path":[]},{"path":"https://craig-parylo.github.io/plotor/reference/plot_or.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot OR — plot_or","text":"","code":"# Load required libraries library(plotor) library(datasets) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(stats) library(forcats) library(tidyr)  # Load the Titanic dataset df <- datasets::Titanic |>   as_tibble() |>   # convert aggregated counts to individual observations   filter(n > 0) |>   uncount(weights = n) |>   # convert character variables to factors   mutate(across(where(is.character), as.factor))  # Perform logistic regression using `glm` lr <- glm(   data = df,   family = 'binomial',   formula = Survived ~ Class + Sex + Age )  # Produce the Odds Ratio plot plot_or(lr)"},{"path":"https://craig-parylo.github.io/plotor/reference/plotor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"plotor: Produces an Odds Ratio Plot from a Logistic Regression Model — plotor-package","title":"plotor: Produces an Odds Ratio Plot from a Logistic Regression Model — plotor-package","text":"Produces Odds Ratio () Plot visualise result logistic regression analysis. Provide binomial regression model produced 'glm()' convert estimates odds ratios 95","code":""},{"path":[]},{"path":"https://craig-parylo.github.io/plotor/reference/plotor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plotor: Produces an Odds Ratio Plot from a Logistic Regression Model — plotor-package","text":"Maintainer: Craig Parylo craig.parylo2@nhs.net (ORCID) [copyright holder]","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/table_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Table OR — table_or","title":"Table OR — table_or","text":"Produces formatted table showing outputs Odds Ratio analysis, including details covariate characteristics model results.","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/table_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table OR — table_or","text":"","code":"table_or(   glm_model_results,   conf_level = 0.95,   output = \"tibble\",   confint_fast_estimate = FALSE )"},{"path":"https://craig-parylo.github.io/plotor/reference/table_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table OR — table_or","text":"glm_model_results Results binomial Generalised Linear Model (GLM), produced stats::glm(). conf_level Numeric value 0.001 0.999 (default = 0.95) specifying confidence level confidence interval. output String describing output type (default = 'tibble'). Options include 'tibble' 'gt'. confint_fast_estimate Boolean (default = FALSE) indicating whether use faster estimate confidence interval. Note: assumes normally distributed data, may suitable data.","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/table_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table OR — table_or","text":"returned object depends output parameter: output = 'tibble', function returns object class \"tbl_df\", \"tbl\" \"data.frame\". output = 'gt', function returns object class \"gt_tbl\" \"list\"","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/table_or.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table OR — table_or","text":"table includes following information: Covariate characteristics: Number observations characteristic Number observiations resulting outcome interest Conversion rate outcome number observations Model results: Estimated Odds Ratio, standard error p-value Calculated confidence interval specified confidence level visualisation plot also provided --glance view model results Includes details characteristics covariates, : number observations characteristic, number observations resulting outcome interest, conversion rate outcome number observations, Details calculated showing : estimated Odds Ratio, standard error p-value, calculated confidence interval confidence level, Also included visualisation plot provide --glance view model results.","code":""},{"path":"https://craig-parylo.github.io/plotor/reference/table_or.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table OR — table_or","text":"Level - name description explanatory variable. N - number observations examined. n - number observations resulting outcome interest. Rate - proportion observations resulting outcome interest (n / N). Class - description data type.  - Odds Ratio point estimate - values 1 indicate inverse relationship whereas values 1 indicate positive relationship. Values shown 4 significant figures. SE - Standard Error point estimate. Values shown 4 significant figures. p - p-value estimate based residual Chi-squared statistic.  Lower & Upper - range values comprising CI, shown 4 significant figures. Significance - statistical significance indicated CI, Significant CI touch cross value 1.","code":"# Load the Titanic dataset df <- datasets::Titanic |>   dplyr::as_tibble() |>   # convert aggregated counts to individual observations   dplyr::filter(n > 0) |>   tidyr::uncount(weights = n) |>   # convert character variables to factors   dplyr::mutate(dplyr::across(dplyr::where(is.character), as.factor))  # Perform logistic regression using `glm` lr <- stats::glm(   data = df,   family = 'binomial',   formula = Survived ~ Class + Sex + Age )  # Produce the Odds Ratio table as a tibble table_or(lr) #> # A tibble: 8 × 14 #>   label level   rows outcome outcome_rate class  estimate std.error statistic #>   <fct> <fct>  <int>   <int>        <dbl> <chr>     <dbl>     <dbl>     <dbl> #> 1 Class 1st      325     203        0.625 factor  NA         NA         NA    #> 2 Class 2nd      285     118        0.414 factor   0.361      0.196     -5.19 #> 3 Class 3rd      706     178        0.252 factor   0.169      0.172    -10.4  #> 4 Class Crew     885     212        0.240 factor   0.424      0.157     -5.45 #> 5 Sex   Female   470     344        0.732 factor  NA         NA         NA    #> 6 Sex   Male    1731     367        0.212 factor   0.0889     0.140    -17.2  #> 7 Age   Adult   2092     654        0.313 factor  NA         NA         NA    #> 8 Age   Child    109      57        0.523 factor   2.89       0.244      4.35 #> # ℹ 5 more variables: p.value <dbl>, conf.low <dbl>, conf.high <dbl>, #> #   significance <chr>, comparator <dbl>  # Produce the Odds Ratio table as a gt object table_or(lr, output = 'gt')     Survived     Odds Ratio summary table with 95% Confidence Interval                     Characteristic1                       Odds Ratio (OR)2                       95% Confidence Interval (CI)3              OR Plot     Level       N       n       Rate       Class       OR       SE       p       Lower       Upper       Significance     Class 1st 325 203 62.46% factor — — — — — Comparator  2nd 285 118 41.4% factor 0.3613 0.1960 2.05 × 10−7 0.2453 0.5292 Significant 03rd 706 178 25.21% factor 0.1690 0.1716 3.69 × 10−25 0.1203 0.2358 Significant 0Crew 885 212 23.95% factor 0.4241 0.1573 5.00 × 10−8 0.3115 0.5775 Significant 0Sex Female 470 344 73.19% factor — — — — — Comparator  Male 1,731 367 21.2% factor 0.08892 0.1404 1.43 × 10−66 0.06725 0.1166 Significant 0Age Adult 2,092 654 31.26% factor — — — — — Comparator  Child 109 57 52.29% factor 2.891 0.2440 1.36 × 10−5 1.792 4.671 Significant 01 Characteristics are the explanatory variables in the logistic regression analysis. For categorical variables the first characteristic is designated as a reference against which the others are compared. For numeric variables the results indicate a change per single unit increase. Level - the name or the description of the explanatory variable. N - the number of observations examined. n - the number of observations resulting in the outcome of interest. Rate - the proportion of observations resulting in the outcome of interest (n / N). Class - description of the data type.     2 Odds Ratios estimate the relative odds of an outcome with reference to the Characteristic. For categorical data the first level is the reference against which the odds of other levels are compared. Numerical characteristics indicate the change in OR for each additional increase of one unit in the variable. OR - The Odds Ratio point estimate - values below 1 indicate an inverse relationship whereas values above 1 indicate a positive relationship. Values shown to 4 significant figures. SE - Standard Error of the point estimate. Values shown to 4 significant figures. p - The p-value estimate based on the residual Chi-squared statistic.     3 Confidence Interval - the range of values likely to contain the OR in 95% of cases if this study were to be repeated multiple times. If the CI touches or crosses the value 1 then it is unlikely the Characteristic is significantly associated with the outcome. Lower & Upper - The range of values comprising the CI, shown to 4 significant figures. Significance - The statistical significance indicated by the CI, Significant where the CI does not touch or cross the value 1."},{"path":[]},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"compatibility-and-testing-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Compatibility and testing fixes:","title":"plotor 0.7.0","text":"Test suite (#68) Addressed issues snapshot tests failed depending installed version ggplot2. Snapshots produced different ggplot2 versions causing test failures, especially vdiffr::expect_doppelganger(). temporary solution suspend visual comparison tests avoid unnecessary failures users latest ggplot2. Readiness upcoming {ggplot2} release (#65) Investigated resolved failures upcoming major release ggplot2, ensuring package’s examples, vignettes, tests remain compatible.","code":""},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"enhancements-for-model-diagnostics-0-7-0","dir":"Changelog","previous_headings":"","what":"Enhancements for model diagnostics:","title":"plotor 0.7.0","text":"New function check_or() (#62) Added exported function, check_or(), provide users detailed feedback whether logistic regression models meet underlying assumptions. Previously, detailed diagnostics accessible via undocumented internal functions. Assumptions: check sample size (#41) Introduced check sufficient sample size, improving diagnostics logistic regression models. improvements make package robust upstream changes dependencies offer users transparent accessible model validation tools.","code":""},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"plotor-060","dir":"Changelog","previous_headings":"","what":"plotor 0.6.0","title":"plotor 0.6.0","text":"CRAN release: 2025-05-28","code":""},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"user-focussed-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"User-focussed changes","title":"plotor 0.6.0","text":"Summary tables (#28) Introduced summary tables odds ratios, making easier view interpret results model. Faster estimates confidence intervals (#53) Optional argument, confint_fast_estimate, plot_or() table_or() allows faster approximation confidence intervals using stats::confint.default(). can helpful large data sets confidence intervals can take long time calculate . Improved validation confidence level (#29) Enhanced package checks user input confidence levels, reducing risk invalid values used. included enhanced checks internal function validate_conf_level_inputs() enhanced error handling user feedback (#31). Assumption checks Started suite checks assumptions logistic regression upheld. Implemented release: Assumptions: check outcome binary (#42) Added logic confirm outcome variable binary, required odds ratio calculations. Assumptions: check multicollinearity (#43) Implemented checks detect multicollinearity among predictors, helping users identify address issues affect model validity. Assumptions: check separation (#47) Added checks separation data, can cause estimation problems logistic regression. Updated README Improved README documentation, making easier users get started understand package.","code":""},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"developer-focussed-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Developer-focussed changes","title":"plotor 0.6.0","text":"Test suite (Developer focus) (#33, #37) Added developed suite tests ensuring code reliability maintaining quality package evolves. Bug fixes Addressed resolved warnings related {tidyselect} package, leading cleaner output better compatibility tidyverse ecosystem. (#34) Updated way class descriptions handled, consolidating single strings consistency clarity. (#50) Fixed ordering terms levels table_or(), results presented logical expected sequence. (#54, #56) full details, see changelog: https://github.com/craig-parylo/plotor/compare/v0.5.2…v0.6.0","code":""},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"plotor-052","dir":"Changelog","previous_headings":"","what":"plotor 0.5.2","title":"plotor 0.5.2","text":"CRAN release: 2025-02-09 plot_or() now respects order covariates formula plotting (#15). plot_or() handles missing information avoid {ggplot2} related warning messages (#11). plot_or() accepts customised confidence limits, e.g. 99%, used calculating confidence intervals (#19). plot_or() conducts checks inputs - ensuring {glm} model logistic regression (family = ‘binomial’ link = ‘logit’) validates confidence limit within range 0.001 0.999 (#22, #19).","code":""},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"plotor-051","dir":"Changelog","previous_headings":"","what":"plotor 0.5.1","title":"plotor 0.5.1","text":"CRAN release: 2024-09-27","code":""},{"path":[]},{"path":"https://craig-parylo.github.io/plotor/news/index.html","id":"plotor-010","dir":"Changelog","previous_headings":"","what":"plotor 0.1.0","title":"plotor 0.1.0","text":"Initial CRAN submission.","code":""}]
